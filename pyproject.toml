[build-system]
requires = ["setuptools"]
build-backend = "setuptools.build_meta"

[project]
name = "stubdocify"
description = "A tool for merging docstrings into stubs from the source files."
requires-python = ">=3.11"
version = "0.0.1"
readme = "README.md"
license = { file = "LICENSE" }
authors = [
    { name = "Sachaa-Thanasius", email = "111999343+Sachaa-Thanasius@users.noreply.github.com" },
]
classifiers = [
    "Development Status :: 1 - Planning",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Natural Language :: English",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: Implementation :: CPython",
    "Programming Language :: Python :: Implementation :: PyPy",
    "Topic :: Software Development :: Libraries",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Typing :: Typed",
]

[tool.setuptools]
packages = ["stubdocify"]

[tool.setuptools.package-data]
"stubdocify" = ["py.typed"]

[project.urls]
Repository = "https://github.com/Sachaa-Thanasius/stubdocify"
"Issue Tracker" = "https://github.com/Sachaa-Thanasius/stubdocify/issues"

[tool.ruff]
line-length = 120
target-version = "py311"

[tool.ruff.lint]
select = [
    "F",
    "E",
    "I",
    "UP",
    "YTT",
    "ANN",
    "S",
    "BLE",
    "B",
    "A",
    "COM",
    "C4",
    "DTZ",
    "EM",
    "ISC",
    "G",
    "INP",
    "PIE",
    "T20",
    "PYI",
    "RSE",
    "RET",
    "SIM",
    "TID",
    "PTH",
    "ERA",
    "PD",
    "PL",
    "TRY",
    "NPY",
    "RUF",
]
ignore = [
    "S101", # Use of assert here is a known quantity. Blame typing memes.
    # "PLR2004", # Magic value comparison. May remove later.
    "SIM105", # Suppressable exception. contextlib.suppress is a stylistic choice with overhead.
    "C90",    # McCabe complexity memes.
    "PD011",  # Erroneous issue that triggers for any .values attribute access at all.
    "S311",   # No need for cryptographically secure random number generation in this use case.
    "ANN101", # Type of self is implicit.
    "ANN102", # Type of cls is implicit.
    "ANN204", # Special method return types are known by type checker.
    "ANN401", # Not sure how else to type *args and **kwargs when they could be anything.
    "PLR",    # Complexity things.
    "ERA001", # Ignore commented code for now.
    # Recommended by Ruff when using Ruff format.
    "E111",
    "E114",
    "E117",
    "Q003",
    "COM812",
    "COM819",
    # "E501",
    "ISC001",
    "ISC002",
]
unfixable = [
    "ERA", # I don't want anything erroneously detected deleted by this.
]

[tool.ruff.lint.per-file-ignores]
# Star import usually throws these.
"__init__.py" = [
    "F403",    # Undefined import with star
    "PLC0414", # Import alias does not rename original package
]
"tests/*" = [
    "T201",   # Allow prints.
    "T203",
    "ANN",    # Don't need annotations.
    "PYI021", # The whole point is docstrings in stubs.
]

[tool.ruff.lint.isort]
combine-as-imports = true

[tool.pyright]
include = ["stubdocify"]
ignore = ["tests"]
venvPath = "."
venv = ".venv"

pythonVersion = "3.11"
typeCheckingMode = "strict"
reportMissingTypeStubs = "warning"
reportCallInDefaultInitializer = "warning"
reportImportCycles = "warning"
reportPropertyTypeMismatch = "warning"
reportUnnecessaryTypeIgnoreComment = "warning"
